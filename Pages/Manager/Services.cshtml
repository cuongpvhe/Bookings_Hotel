@page
@model Bookings_Hotel.Pages.Manager.ServicesModel
@{
    ViewData["Title"] = "Services";
    Layout = "~/Pages/Shared/Layout_admin.cshtml";
}
<head>
    <link rel="stylesheet" href="~/admin_template/css/room.css" />
</head>

<div class="main-header d-flex justify-content-between">
    <div>
        <span class="mb-0 fs-3 fw-bold">Service Manage</span>
    </div>

    <div>
        <button class="btn btn-primary rounded-pill px-4" type="button">Add</button>
    </div>
</div>

<div class="search-bar d-flex justify-content-start">
    <div class="me-2">
        <select class="form-select" aria-label="Default select example">
            <option value="1">All Status</option>
            <option value="2">Booked</option>
            <option value="3">Available</option>
        </select>
    </div>

    <div class="d-flex justify-content-between">
        <input id="searchInput" class="form-control me-2" type="search" placeholder="Enter something ..." aria-label="Search">
        <button class="btn btn-primary me-0" type="button" id="searchButton"><i class="ri-search-line"></i></button>
    </div>
</div>

<div class="table-container">
    <!-- List Service Start -->
    <div id="roomListContainer">
        @await Html.PartialAsync("PartialViews/Manager/_ServicesPartialView", Model)
    </div>
    <!-- List Service End -->
</div>


<div class="pagination-container ">
    <div class="me-2">
        <select class="form-select" aria-label="Default select example">
            <option value="1">10</option>
            <option value="2">20</option>
            <option value="3">30</option>
        </select>
    </div>

    <div class="pagination-container">
        <nav aria-label="...">
            <ul class="pagination m-0">
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link ajax-page" href="?pageIndex=@(Model.CurrentPage - 1)" data-page="@(Model.CurrentPage - 1)">Previous</a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                        <a class="page-link ajax-page" href="?pageIndex=@i" data-page="@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link ajax-page" href="?pageIndex=@(Model.CurrentPage + 1)" data-page="@(Model.CurrentPage + 1)">Next</a>
                </li>
            </ul>
        </nav>
    </div>

</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#searchButton').on('click', function () {
                var query = $('#searchInput').val();
                loadPageContent({ searchTerm: query, pageIndex: 1 });
            });

            // Handle pagination clicks
            $(document).on('click', '.ajax-page', function (e) {
                e.preventDefault();
                var pageIndex = $(this).data('page');
                var query = $('#searchInput').val();

                if (pageIndex > 0) {
                    loadPageContent({ searchTerm: query, pageIndex: pageIndex });
                    updatePagination(pageIndex);
                }
            });

            function loadPageContent(data) {
                $.ajax({
                    url: '/Manager/Services?handler=Search',
                    type: 'GET',
                    data: data,
                    success: function (result) {
                        $('#roomListContainer').html(result);
                        updatePagination(data.pageIndex);
                    },
                    error: function () {
                        alert('Error fetching data');
                    }
                });
            }

            function updatePagination(currentPage) {
                $('.pagination .page-item').removeClass('active');
                $('.pagination .page-item').each(function () {
                    var pageLink = $(this).find('.page-link');
                    if (pageLink.data('page') == currentPage) {
                        $(this).addClass('active');
                    }
                });

                var prevPageItem = $('.pagination .page-item').first();
                prevPageItem.toggleClass('disabled', currentPage == 1);
                prevPageItem.find('.page-link').data('page', parseInt(currentPage) - 1);

                var nextPageItem = $('.pagination .page-item').last();
                var totalPages = @Model.TotalPages;
                nextPageItem.toggleClass('disabled', currentPage == totalPages);
                nextPageItem.find('.page-link').data('page', parseInt(currentPage) + 1);
            }
        });
    </script>
}

