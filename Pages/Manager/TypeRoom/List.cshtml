@page
@model Bookings_Hotel.Pages.Manager.TypeRoom.TypeRoomModel

@{
    ViewData["Title"] = "Type Room List";
    Layout = "~/Pages/Shared/Layout_admin.cshtml";
}

<head>
    <link rel="stylesheet" href="~/admin_template/css/room.css" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

</head>

<div class="main-header d-flex justify-content-between">
    <div>
        <span class="mb-0 fs-3 fw-bold">Danh sách các loại phòng</span>
    </div>

    <div>
        <a class=" btn btn-primary rounded-pill px-4" asp-page="Create">Thêm loại phòng</a>
    </div>
</div>

<div class="search-bar d-flex justify-content-start">
    <div class="d-flex justify-content-between">
        <input id="searchInput" class="form-control me-2" type="search" placeholder="Hãy nhập gì đó..." aria-label="Tìm kiếm">
        <button class="btn btn-primary me-0" type="button" id="searchButton"><i class="ri-search-line"></i></button>
    </div>
</div>

<div class="table-container">
    <div id="typeroomListContainer">
        @await Html.PartialAsync("PartialViews/Manager/_TypeRoomPartialView", Model)
    </div>
</div>



<div class="pagination-container ">
    <div class="me-2">
        <select class="form-select" aria-label="Default select example" name ="page-size">
            <option value="1">10</option>
            <option value="2">20</option>
            <option value="3">30</option>
        </select>
    </div>

    <div class="pagination-container">
        <nav aria-label="...">
            <ul class="pagination m-0">
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link ajax-page" href="?pageIndex=@(Model.CurrentPage - 1)" data-page="@(Model.CurrentPage - 1)">Previous</a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                        <a class="page-link ajax-page" href="?pageIndex=@i" data-page="@i">@i</a>
                    </li>
                }
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link ajax-page" href="?pageIndex=@(Model.CurrentPage + 1)" data-page="@(Model.CurrentPage + 1)">Next</a>
                </li>
            </ul>
        </nav>
    </div>
</div>
@Html.AntiForgeryToken()
<script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    function confirmDelete(typeRoomId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to delete this type Room?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                deleteRoom(typeRoomId);
            }
        });
    }

    function deleteRoom(typeRoomId) {
        $.ajax({
            url: '/Manager/TypeRoom/List?handler=Delete',
            type: 'POST',
            data: {
                id: typeRoomId
            },
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            },
            beforeSend: function () {
                Swal.fire({
                    title: 'Processing',
                    text: 'Please wait while we checking...',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    willOpen: () => {
                        Swal.showLoading();
                    }
                });
            },
            success: function (response) {
                if (response.success) {
                    window.location.reload();
                }

            },
            error: function (xhr, status, error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'There was an error processing your checking!'
                });

                var errorMessage = xhr.responseText; 
                console.log(errorMessage);
            }
        });
    }
</script>
